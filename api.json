{
    "openapi": "3.1.0",
    "info": {
        "title": "Laravel API",
        "description": "Laravel API",
        "version": "1.0.0"
    },
    "paths": {
        "/login": {
            "post": {
                "tags": [
                    "auth"
                ],
                "operationId": "login",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "token": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LoginRequestBodyValidationError"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "tags": [
                    "auth"
                ],
                "operationId": "logout",
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/me": {
            "get": {
                "tags": [
                    "auth"
                ],
                "operationId": "getAuthUser",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/posts/{id}": {
            "get": {
                "tags": [
                    "post"
                ],
                "summary": "Display the specified resource.",
                "operationId": "getPost",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/PostId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PostResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShowPostRequestPathValidationError"
                                }
                            }
                        }
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            },
            "delete": {
                "tags": [
                    "post"
                ],
                "summary": "Remove the specified resource from storage.",
                "operationId": "deletePost",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/PostId"
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DestroyPostRequestPathValidationError"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "post"
                ],
                "summary": "Update the specified resource in storage.",
                "operationId": "updatePost",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/PostId"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdatePostRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PostResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdatePostRequestPathValidationError"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdatePostRequestBodyValidationError"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/posts": {
            "get": {
                "tags": [
                    "post"
                ],
                "summary": "Display a listing of the resource.",
                "operationId": "getPosts",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Page"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PostCollection"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IndexPostRequestQueryValidationError"
                                }
                            }
                        }
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            },
            "post": {
                "tags": [
                    "post"
                ],
                "summary": "Store a newly created resource in storage.",
                "operationId": "createPost",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StorePostRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PostResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StorePostRequestBodyValidationError"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "LoginRequest": {
                "required": [
                    "email",
                    "password"
                ],
                "properties": {
                    "email": {
                        "type": "string",
                        "example": "test@example.com"
                    },
                    "password": {
                        "type": "string",
                        "example": "password"
                    }
                },
                "type": "object"
            },
            "LoginRequestBodyValidationError": {
                "required": [
                    "message",
                    "errors"
                ],
                "properties": {
                    "message": {
                        "type": "string"
                    },
                    "errors": {
                        "properties": {
                            "email": {
                                "type": "string"
                            },
                            "password": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "DestroyPostRequestPathValidationError": {
                "required": [
                    "message",
                    "errors"
                ],
                "properties": {
                    "message": {
                        "type": "string"
                    },
                    "errors": {
                        "properties": {
                            "path.id": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "IndexPostRequestQueryValidationError": {
                "required": [
                    "message",
                    "errors"
                ],
                "properties": {
                    "message": {
                        "type": "string"
                    },
                    "errors": {
                        "properties": {
                            "query.page": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "ShowPostRequestPathValidationError": {
                "required": [
                    "message",
                    "errors"
                ],
                "properties": {
                    "message": {
                        "type": "string"
                    },
                    "errors": {
                        "properties": {
                            "path.id": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "StorePostRequest": {
                "required": [
                    "content"
                ],
                "properties": {
                    "content": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "StorePostRequestBodyValidationError": {
                "required": [
                    "message",
                    "errors"
                ],
                "properties": {
                    "message": {
                        "type": "string"
                    },
                    "errors": {
                        "properties": {
                            "content": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "UpdatePostRequest": {
                "required": [
                    "content"
                ],
                "properties": {
                    "content": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UpdatePostRequestBodyValidationError": {
                "required": [
                    "message",
                    "errors"
                ],
                "properties": {
                    "message": {
                        "type": "string"
                    },
                    "errors": {
                        "properties": {
                            "content": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "UpdatePostRequestPathValidationError": {
                "required": [
                    "message",
                    "errors"
                ],
                "properties": {
                    "message": {
                        "type": "string"
                    },
                    "errors": {
                        "properties": {
                            "path.id": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "CustomResourceCollection": {
                "required": [
                    "links",
                    "meta"
                ],
                "properties": {
                    "links": {
                        "required": [
                            "first",
                            "last",
                            "prev",
                            "next"
                        ],
                        "properties": {
                            "first": {
                                "type": "string",
                                "format": "uri"
                            },
                            "last": {
                                "type": "string",
                                "format": "uri"
                            },
                            "prev": {
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "format": "uri"
                            },
                            "next": {
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "format": "uri"
                            }
                        },
                        "type": "object"
                    },
                    "meta": {
                        "required": [
                            "currentPage",
                            "from",
                            "lastPage",
                            "links",
                            "path",
                            "perPage",
                            "to",
                            "total"
                        ],
                        "properties": {
                            "currentPage": {
                                "type": "integer",
                                "example": 1
                            },
                            "from": {
                                "type": "integer",
                                "example": 1
                            },
                            "lastPage": {
                                "type": "integer",
                                "example": 10
                            },
                            "links": {
                                "type": "array",
                                "items": {
                                    "required": [
                                        "url",
                                        "label",
                                        "active"
                                    ],
                                    "properties": {
                                        "url": {
                                            "type": [
                                                "string",
                                                "null"
                                            ],
                                            "format": "uri"
                                        },
                                        "label": {
                                            "type": "string"
                                        },
                                        "active": {
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "path": {
                                "type": "string",
                                "format": "uri"
                            },
                            "perPage": {
                                "type": "integer",
                                "example": 10
                            },
                            "to": {
                                "type": "integer",
                                "example": 10
                            },
                            "total": {
                                "type": "integer",
                                "example": 100
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "PostCollection": {
                "required": [
                    "data"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/CustomResourceCollection"
                    },
                    {
                        "properties": {
                            "data": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/PostResource"
                                }
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "PostResource": {
                "required": [
                    "id",
                    "content",
                    "userId"
                ],
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "content": {
                        "type": "string"
                    },
                    "userId": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "UserResource": {
                "required": [
                    "id",
                    "name",
                    "email",
                    "emailVerifiedAt"
                ],
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string",
                        "format": "email"
                    },
                    "emailVerifiedAt": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "BaseError": {
                "required": [
                    "message"
                ],
                "properties": {
                    "message": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "responses": {
            "Unauthorized": {
                "description": "",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/BaseError"
                        }
                    }
                }
            },
            "Forbidden": {
                "description": "",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/BaseError"
                        }
                    }
                }
            },
            "InternalServerError": {
                "description": "",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/BaseError"
                        }
                    }
                }
            }
        },
        "parameters": {
            "PostId": {
                "name": "id",
                "in": "path",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "Page": {
                "name": "page",
                "in": "query",
                "required": false,
                "schema": {
                    "type": "integer"
                }
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "auth",
            "description": "auth"
        },
        {
            "name": "post",
            "description": "post"
        }
    ]
}
